// Generated by CoffeeScript 1.5.0
(function() {

  describe('Sharkbone.Modules.CUDCallbacks', function() {
    var subject;
    subject = Sharkbone.Modules.CUDCallbacks;
    it('should be defined', function() {
      return expect(subject).toBeDefined();
    });
    describe('Callback containers', function() {
      it('_afterSuccessfulCreate', function() {
        return expect(subject.prototype._afterSuccessfulCreate).toEqual([]);
      });
      it('_afterSuccessfulUpdate', function() {
        return expect(subject.prototype._afterSuccessfulUpdate).toEqual([]);
      });
      it('_afterSuccessfulDestroy', function() {
        return expect(subject.prototype._afterSuccessfulDestroy).toEqual([]);
      });
      it('_afterFailingCreate', function() {
        return expect(subject.prototype._afterFailingCreate).toEqual([]);
      });
      it('_afterFailingUpdate', function() {
        return expect(subject.prototype._afterFailingUpdate).toEqual([]);
      });
      return it('_afterFailingDestroy', function() {
        return expect(subject.prototype._afterFailingDestroy).toEqual([]);
      });
    });
    return describe('initializeDefaultCallbacks', function() {
      beforeEach(function() {
        subject.prototype._afterSuccessfulCreate = [];
        subject.prototype._afterSuccessfulUpdate = [];
        subject.prototype._afterSuccessfulDestroy = [];
        subject.prototype._afterFailingCreate = [];
        subject.prototype._afterFailingUpdate = [];
        subject.prototype._afterFailingDestroy = [];
        return subject.prototype.initializeDefaultCallbacks();
      });
      it('should add 2 callbacks to _afterSuccessfulCreate', function() {
        return expect(subject.prototype._afterSuccessfulCreate.length).toEqual(2);
      });
      it('should add 2 callbacks to _afterSuccessfulUpdate', function() {
        return expect(subject.prototype._afterSuccessfulUpdate.length).toEqual(2);
      });
      return it('should add 1 callback to _afterSuccessfulDestroy', function() {
        return expect(subject.prototype._afterSuccessfulCreate.length).toEqual(1);
      });
    });
  });

}).call(this);

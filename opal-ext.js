// Generated by CoffeeScript 1.3.3
var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

OpalExtensions = {};

OpalExtensions.Mixin = (function() {

  function Mixin() {}

  Mixin.mixinCallbacks = ['beforeInclude', 'beforeExtend', 'included', 'extended'];

  Mixin.extend = function(obj) {
    var proto, _ref, _ref1,
      _this = this;
    proto = typeof obj === 'object' ? obj : obj.prototype;
    if ((_ref = proto.beforeExtend) != null) {
      _ref.apply(this, proto);
    }
    _.each(Object.keys(proto), function(key) {
      if (__indexOf.call(_this.mixinCallbacks, key) < 0) {
        return _this[key] = proto[key];
      }
    });
    if ((_ref1 = proto.extended) != null) {
      _ref1.apply(this, proto);
    }
    return this;
  };

  Mixin.include = function(obj) {
    var proto, _ref, _ref1,
      _this = this;
    proto = typeof obj === 'object' ? obj : obj.prototype;
    if ((_ref = proto.beforeInclude) != null) {
      _ref.apply(this, proto);
    }
    _.each(Object.keys(proto), function(key) {
      if (__indexOf.call(_this.mixinCallbacks, key) < 0) {
        return _this.prototype[key] = proto[key];
      }
    });
    if ((_ref1 = proto.included) != null) {
      _ref1.apply(this, proto);
    }
    return this;
  };

  return Mixin;

})();

OpalExtensions.ViewManager = (function() {

  function ViewManager() {}

  ViewManager.prototype.getDesktop = function() {
    return this.desktop || (this.desktop = new OpalExtensions.Desktop());
  };

  ViewManager.prototype.clearWorkSpace = function(workSpace) {
    return this.getDesktop().clear(workSpace);
  };

  ViewManager.prototype.appMain = function(view, viewData) {
    this.clearWorkSpace();
    return this.renderOn(this.getDesktop().layout().main, view, viewData);
  };

  ViewManager.prototype.appDetail = function(view, viewData) {
    return this.renderOn(this.getDesktop().layout().detail, view, viewData);
  };

  ViewManager.prototype.appForm = function(view, viewData) {
    return this.renderOn(this.getDesktop().layout().forms.primary, view, viewData);
  };

  ViewManager.prototype.renderOn = function(container, view, viewData) {
    return $(container).html(new view(viewData).render().el);
  };

  return ViewManager;

})();

OpalExtensions.Desktop = (function() {

  function Desktop() {}

  _.extend(Desktop, OpalExtensions.Mixin);

  Desktop.prototype.layouts = {
    "default": {
      main: $("#app_container #main"),
      detail: $("#app_container #detail"),
      menu: $("#app_container #main_menu"),
      forms: {
        primary: $("#app_container #primary_form")
      }
    },
    login: {
      main: $("#login_container #main")
    }
  };

  Desktop.prototype.activeLayoutName = 'default';

  Desktop.prototype.layout = function() {
    return this.layouts[this.activeLayoutName];
  };

  Desktop.prototype.getLayout = function() {
    return this.layouts[this.activeLayoutName];
  };

  Desktop.prototype.clear = function(target) {
    var workSpace;
    workSpace = target != null ? this.getLayout()[target] : this.getLayout();
    if (workSpace.html != null) {
      workSpace.html('');
    } else {
      _.each(_.values(workSpace), function(container) {
        if (container.html != null) {
          return container.html('');
        }
      });
    }
    return this.afterClear(workSpace, target);
  };

  Desktop.prototype.afterClear = function(workSpace, target) {
    var _this = this;
    return _.each(this._afterClear, function(callback, key) {
      return callback != null ? callback.call(_this, workSpace, target) : void 0;
    });
  };

  return Desktop;

})();

OpalExtensions.Router = (function(_super) {

  __extends(Router, _super);

  function Router() {
    return Router.__super__.constructor.apply(this, arguments);
  }

  _.extend(Router, OpalExtensions.Mixin);

  Router.include(OpalExtensions.ViewManager);

  Router.prototype.initialize = function() {
    return Router.__super__.initialize.apply(this, arguments);
  };

  Router.prototype.loadData = function() {
    return this.collection.fetch();
  };

  Router.prototype.getResource = function(id) {
    this.model = this.collection.get(id) || new this.collection.model({
      id: id
    });
    this.model.fetch();
    return this.model;
  };

  return Router;

})(Backbone.Router);

OpalExtensions.Collection = (function(_super) {

  __extends(Collection, _super);

  function Collection() {
    return Collection.__super__.constructor.apply(this, arguments);
  }

  return Collection;

})(Backbone.Collection);

OpalExtensions.Model = (function(_super) {

  __extends(Model, _super);

  function Model() {
    return Model.__super__.constructor.apply(this, arguments);
  }

  return Model;

})(Backbone.Model);

OpalExtensions.View = (function(_super) {

  __extends(View, _super);

  function View() {
    return View.__super__.constructor.apply(this, arguments);
  }

  _.extend(View, OpalExtensions.Mixin);

  View.include(OpalExtensions.ViewManager);

  View.prototype.initialize = function() {
    return View.__super__.initialize.apply(this, arguments);
  };

  View.prototype.bindings = function() {
    throw new Error('You must define the bindings method in your view!');
  };

  View.prototype.events = {
    "click .close-self": "close"
  };

  View.prototype.close = function(e) {
    e.preventDefault();
    return this.remove();
  };

  View.prototype.remove = function() {
    if (this.modelBinder != null) {
      this.modelBinder.unbind();
    }
    if (this.collectionBinder != null) {
      this.collectionBinder.unbind();
    }
    return this.$el.remove();
  };

  View.prototype.renderBareTemplate = function(template) {
    return this.$el.html(template());
  };

  View.prototype.renderResource = function(template, model) {
    this.$el.html(template());
    this.modelBinder.bind(model, this.el, this.bindings());
    return this;
  };

  View.prototype.renderCollection = function(template, collection, containerSelector) {
    var _this = this;
    collection.fetch({
      success: function() {
        _this.$el.html(template());
        return _this.collectionBinder.bind(collection, _this.$(containerSelector));
      }
    });
    return this;
  };

  View.prototype.indexPath = function(direction, value, attribute, model) {
    return "#" + model.urlRoot;
  };

  View.prototype.showPath = function(direction, value, attribute, model) {
    return "#" + model.urlRoot + "/" + value;
  };

  View.prototype.editPath = function(direction, value, attribute, model) {
    return "#" + model.urlRoot + "/" + value + "/edit";
  };

  return View;

})(Backbone.View);
